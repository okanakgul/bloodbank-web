{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\etvartavukvar\\\\Desktop\\\\Bitirme github\\\\coagusearch-frontend\\\\bloodbank-web\\\\src\\\\App\\\\App.js\";\nimport React, { Component } from \"react\";\nimport logo from \"./logo.jpg\";\nimport \"./App.css\";\nimport HttpService from \"../services/http-service\";\nimport Bloodreq from \"../bloodreq/bloodreq\";\nimport Bloodbank from \"../bloodbank/bloodbank\";\nimport Bloodbank0Card from \"../bloodbank/bloodbank0Card\";\nimport BloodbankACard from \"../bloodbank/bloodbankACard\";\nimport BloodbankBCard from \"../bloodbank/bloodbankBCard\";\nimport BloodbankABCard from \"../bloodbank/bloodbankABCard\";\nimport Details from \"../details/details\";\nimport Update from \"./update\";\nvar needUpdate = false;\nvar newLength;\nvar oldLength;\nconst http = new HttpService();\nvar oldLength, newlength;\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.loadBloodReqsToOrder = () => {\n      var self = this;\n      http.getBloodReqs().then(bloodreqs => {\n        self.setState({\n          bloodreq: bloodreqs\n        });\n        if (self.state.bloodreq.length != 0) oldLength = self.state.bloodreq.length;\n      }, err => {});\n    };\n\n    this.loadBloodReqs = () => {\n      var self = this;\n      setInterval(function () {\n        http.getBloodReqs().then(bloodreqs => {\n          self.setState({\n            bloodreq: bloodreqs\n          });\n          var orderedList = self.state.bloodreq.sort();\n          orderedList = orderedList.reverse();\n          self.setState({\n            bloodreq: orderedList\n          });\n        }, err => {});\n      }, 1000);\n    };\n\n    this.loadBloodBank = () => {\n      var self = this;\n      setInterval(function () {\n        http.getBloodBank().then(data => {\n          self.setState({\n            bloodbank: data\n          });\n        }, err => {});\n      }, 1000);\n    };\n\n    this.bloodbankList = () => {\n      const list = this.state.bloodbank.map(bloodbank => React.createElement(\"div\", {\n        className: \"col-sm\",\n        key: bloodbank._id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(Bloodbank0Card, {\n        ffp_0pos: bloodbank.ffp_0pos,\n        ffp_0neg: bloodbank.ffp_0neg,\n        pc_0pos: bloodbank.pc_0pos,\n        pc_0neg: bloodbank.pc_0neg,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }), React.createElement(BloodbankACard, {\n        ffp_Apos: bloodbank.ffp_Apos,\n        ffp_Aneg: bloodbank.ffp_Aneg,\n        pc_Apos: bloodbank.pc_Apos,\n        pc_Aneg: bloodbank.pc_Aneg,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }), React.createElement(BloodbankBCard, {\n        ffp_Bpos: bloodbank.ffp_Bpos,\n        ffp_Bneg: bloodbank.ffp_Bneg,\n        pc_Bpos: bloodbank.pc_Bpos,\n        pc_Bneg: bloodbank.pc_Bneg,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }), React.createElement(BloodbankABCard, {\n        ffp_ABpos: bloodbank.ffp_ABpos,\n        ffp_ABneg: bloodbank.ffp_ABneg,\n        pc_ABpos: bloodbank.pc_ABpos,\n        pc_ABneg: bloodbank.pc_ABneg,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      })));\n      return list;\n    };\n\n    this.bloodreqList = () => {\n      const list = this.state.bloodreq.map(bloodreq => React.createElement(\"div\", {\n        className: \"col-sm\",\n        key: bloodreq._id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(Bloodreq, {\n        req_date: bloodreq.req_date,\n        req_time: bloodreq.req_time,\n        blood_type_name: bloodreq.blood_type_name,\n        units: bloodreq.units,\n        requester_name: bloodreq.requester_name,\n        req_status: bloodreq.req_status,\n        needUpdate: bloodreq.isUpdated,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      })));\n      return list;\n    };\n\n    this.state = {\n      bloodbank: [],\n      bloodreq: [],\n      details: []\n    }; //Bind Functions\n\n    this.loadBloodReqs = this.loadBloodReqs.bind(this);\n    this.loadBloodReqs();\n    this.loadBloodReqsToOrder = this.loadBloodReqsToOrder.bind(this);\n    this.loadBloodReqsToOrder();\n    this.loadBloodBank = this.loadBloodBank.bind(this);\n    this.loadBloodBank();\n\n    var _self = this;\n\n    setTimeout(function afterOneSeconds() {\n      _self.bloodreqList = _self.bloodreqList.bind(_self);\n      _self.bloodbankList = _self.bloodbankList.bind(_self);\n      console.log(_self.state.bloodreq);\n      console.log(\"old: \" + oldLength);\n      console.log(\"new: \" + newlength);\n\n      var orderedList = _self.state.bloodreq.sort();\n\n      orderedList = orderedList.reverse(); // self.setState({ bloodreq: orderedList });\n\n      setTimeout(function afterOneSeconds() {}, 1000);\n    }, 1000);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"App-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: logo,\n      className: \"App-logo\",\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, \"National Blood Bank\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, \"STORAGE\"), this.bloodbankList(), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, \"FFP: Fresh Frozen Plasma PC: Platelet concentrate\"))), React.createElement(\"div\", {\n      className: \"App-main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, React.createElement(Details, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, this.bloodreqList()))));\n  }\n\n}\n/*\n \n   render() {\n     return (\n       <div className=\"App-main\">\n         <div className = \"table\">\n         <table>\n           <thead>\n                     <tr>\n                         <td>Request Date</td>\n                         <td>Request Time</td>\n                         <td>Blood Type</td>\n                         <td>Unit(s)</td>\n                         <td>Requester Name</td>\n                         <td>Request Status</td>\n                     </tr>\n                 </thead> \n           </table>\n           <table>\n           {this.bloodreqList()}\n           </table>\n         </div>\n       </div>\n     );\n   }\n */\n\n/*function App() {\n\n  constructor(props){\n    super(props);\n    http.getBloodReqs();\n  }\n\n \n\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <h2>This is the National-BloodBank</h2>\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          //href=\"https://reactjs.org\"\n          href=\"https://www.google.com\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}*/\n\n\nexport default App;","map":{"version":3,"sources":["C:/Users/etvartavukvar/Desktop/Bitirme github/coagusearch-frontend/bloodbank-web/src/App/App.js"],"names":["React","Component","logo","HttpService","Bloodreq","Bloodbank","Bloodbank0Card","BloodbankACard","BloodbankBCard","BloodbankABCard","Details","Update","needUpdate","newLength","oldLength","http","newlength","App","constructor","props","loadBloodReqsToOrder","self","getBloodReqs","then","bloodreqs","setState","bloodreq","state","length","err","loadBloodReqs","setInterval","orderedList","sort","reverse","loadBloodBank","getBloodBank","data","bloodbank","bloodbankList","list","map","_id","ffp_0pos","ffp_0neg","pc_0pos","pc_0neg","ffp_Apos","ffp_Aneg","pc_Apos","pc_Aneg","ffp_Bpos","ffp_Bneg","pc_Bpos","pc_Bneg","ffp_ABpos","ffp_ABneg","pc_ABpos","pc_ABneg","bloodreqList","req_date","req_time","blood_type_name","units","requester_name","req_status","isUpdated","details","bind","setTimeout","afterOneSeconds","console","log","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport logo from \"./logo.jpg\";\nimport \"./App.css\";\nimport HttpService from \"../services/http-service\";\nimport Bloodreq from \"../bloodreq/bloodreq\";\nimport Bloodbank from \"../bloodbank/bloodbank\";\nimport Bloodbank0Card from \"../bloodbank/bloodbank0Card\";\nimport BloodbankACard from \"../bloodbank/bloodbankACard\";\nimport BloodbankBCard from \"../bloodbank/bloodbankBCard\";\nimport BloodbankABCard from \"../bloodbank/bloodbankABCard\";\nimport Details from \"../details/details\";\nimport Update from \"./update\";\n\nvar needUpdate = false;\nvar newLength;\nvar oldLength;\n\nconst http = new HttpService();\nvar oldLength, newlength;\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { bloodbank: [], bloodreq: [], details: [] };\n    //Bind Functions\n    this.loadBloodReqs = this.loadBloodReqs.bind(this);\n    this.loadBloodReqs();\n\n    this.loadBloodReqsToOrder = this.loadBloodReqsToOrder.bind(this);\n    this.loadBloodReqsToOrder();\n\n    this.loadBloodBank = this.loadBloodBank.bind(this);\n    this.loadBloodBank();\n\n    var self = this;\n\n    setTimeout(function afterOneSeconds() {\n      self.bloodreqList = self.bloodreqList.bind(self);\n      self.bloodbankList = self.bloodbankList.bind(self);\n\n      console.log(self.state.bloodreq);\n      console.log(\"old: \" + oldLength);\n      console.log(\"new: \" + newlength);\n\n      var orderedList = self.state.bloodreq.sort();\n      orderedList = orderedList.reverse();\n      // self.setState({ bloodreq: orderedList });\n      setTimeout(function afterOneSeconds() {}, 1000);\n    }, 1000);\n  }\n\n  loadBloodReqsToOrder = () => {\n    var self = this;\n    http.getBloodReqs().then(\n      bloodreqs => {\n        self.setState({ bloodreq: bloodreqs });\n        if (self.state.bloodreq.length != 0)\n          oldLength = self.state.bloodreq.length;\n      },\n      err => {}\n    );\n  };\n\n  loadBloodReqs = () => {\n    var self = this;\n    setInterval(function() {\n      http.getBloodReqs().then(\n        bloodreqs => {\n          self.setState({ bloodreq: bloodreqs });\n          var orderedList = self.state.bloodreq.sort();\n          orderedList = orderedList.reverse();\n          self.setState({ bloodreq: orderedList });\n        },\n        err => {}\n      );\n    }, 1000);\n  };\n\n  loadBloodBank = () => {\n    var self = this;\n    setInterval(function() {\n      http.getBloodBank().then(\n        data => {\n          self.setState({ bloodbank: data });\n        },\n        err => {}\n      );\n    }, 1000);\n  };\n\n  bloodbankList = () => {\n    const list = this.state.bloodbank.map(bloodbank => (\n      <div className=\"col-sm\" key={bloodbank._id}>\n        <Bloodbank0Card\n          ffp_0pos={bloodbank.ffp_0pos}\n          ffp_0neg={bloodbank.ffp_0neg}\n          pc_0pos={bloodbank.pc_0pos}\n          pc_0neg={bloodbank.pc_0neg}\n        />\n        <BloodbankACard\n          ffp_Apos={bloodbank.ffp_Apos}\n          ffp_Aneg={bloodbank.ffp_Aneg}\n          pc_Apos={bloodbank.pc_Apos}\n          pc_Aneg={bloodbank.pc_Aneg}\n        />\n        <BloodbankBCard\n          ffp_Bpos={bloodbank.ffp_Bpos}\n          ffp_Bneg={bloodbank.ffp_Bneg}\n          pc_Bpos={bloodbank.pc_Bpos}\n          pc_Bneg={bloodbank.pc_Bneg}\n        />\n        <BloodbankABCard\n          ffp_ABpos={bloodbank.ffp_ABpos}\n          ffp_ABneg={bloodbank.ffp_ABneg}\n          pc_ABpos={bloodbank.pc_ABpos}\n          pc_ABneg={bloodbank.pc_ABneg}\n        />\n      </div>\n    ));\n    return list;\n  };\n\n  bloodreqList = () => {\n    const list = this.state.bloodreq.map(bloodreq => (\n      <div className=\"col-sm\" key={bloodreq._id}>\n        <Bloodreq\n          req_date={bloodreq.req_date}\n          req_time={bloodreq.req_time}\n          blood_type_name={bloodreq.blood_type_name}\n          units={bloodreq.units}\n          requester_name={bloodreq.requester_name}\n          req_status={bloodreq.req_status}\n          needUpdate={bloodreq.isUpdated}\n        />\n      </div>\n    ));\n    return list;\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"\" />\n          <h2>National Blood Bank</h2>\n        </div>\n        <div>\n          <h1>STORAGE</h1>\n          {this.bloodbankList()}\n          <div>\n            <h2>FFP: Fresh Frozen Plasma PC: Platelet concentrate</h2>\n          </div>\n        </div>\n        <div className=\"App-main\">\n          <div className=\"table\">\n            <table>\n              <Details />\n            </table>\n            <div className=\"table\">{this.bloodreqList()}</div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n/*\n \n   render() {\n     return (\n       <div className=\"App-main\">\n         <div className = \"table\">\n         <table>\n           <thead>\n                     <tr>\n                         <td>Request Date</td>\n                         <td>Request Time</td>\n                         <td>Blood Type</td>\n                         <td>Unit(s)</td>\n                         <td>Requester Name</td>\n                         <td>Request Status</td>\n                     </tr>\n                 </thead> \n           </table>\n           <table>\n           {this.bloodreqList()}\n           </table>\n         </div>\n       </div>\n     );\n   }\n */\n\n/*function App() {\n\n  constructor(props){\n    super(props);\n    http.getBloodReqs();\n  }\n\n \n\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <h2>This is the National-BloodBank</h2>\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          //href=\"https://reactjs.org\"\n          href=\"https://www.google.com\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}*/\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}