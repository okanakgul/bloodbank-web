{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\etvartavukvar\\\\Desktop\\\\Bitirme github\\\\coagusearch-frontend\\\\bloodbank-web\\\\src\\\\App\\\\App.js\";\nimport React, { Component } from 'react';\nimport logo from './logo.jpg';\nimport './App.css';\nimport HttpService from '../services/http-service';\nimport Bloodreq from '../bloodreq/bloodreq';\nimport Bloodbank from '../bloodbank/bloodbank';\nimport Details from '../details/details';\nimport Update from './update';\nvar needUpdate = false;\nvar myMessage = self.state.bloodreq[self.state.bloodreq.length - 1];\nvar jsonData = JSON.parse(myMessage);\nvar select = jsonData.isUpdated;\nconsole.log(select);\nvar jsonData = JSON.parse(myMessage);\n\nfor (var i = 0; i < jsonData.counters.length; i++) {\n  var counter = jsonData.counters[i];\n  console.log(counter.counter_name);\n}\n\nconst http = new HttpService();\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.loadBloodReqs = () => {\n      var self = this;\n      http.getBloodReqs().then(bloodreqs => {\n        self.setState({\n          bloodreq: bloodreqs\n        });\n      }, err => {});\n      var length = self.state.bloodreq.length;\n      console.log(length);\n      needUpdate = self.state.bloodreq[length - 1];\n    };\n\n    this.loadBloodBank = () => {\n      var self = this;\n      http.getBloodBank().then(data => {\n        self.setState({\n          bloodbank: data\n        });\n      }, err => {});\n    };\n\n    this.updateHandler = () => {\n      //console.log(needUpdate);\n      if (needUpdate == true) {\n        window.location.reload();\n        needUpdate = false;\n      }\n    };\n\n    this.bloodbankList = () => {\n      const list = this.state.bloodbank.map(bloodbank => React.createElement(\"div\", {\n        className: \"col-sm\",\n        key: bloodbank._id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(Bloodbank, {\n        ffp_0pos: bloodbank.ffp_0pos,\n        ffp_0neg: bloodbank.ffp_0neg,\n        ffp_Apos: bloodbank.ffp_Apos,\n        ffp_Aneg: bloodbank.ffp_Aneg,\n        ffp_Bpos: bloodbank.ffp_Bpos,\n        ffp_Bneg: bloodbank.ffp_Bneg,\n        ffp_ABpos: bloodbank.ffp_ABpos,\n        ffp_ABneg: bloodbank.ffp_ABneg,\n        pc_0pos: bloodbank.pc_0pos,\n        pc_0neg: bloodbank.pc_0neg,\n        pc_Apos: bloodbank.pc_Apos,\n        pc_Aneg: bloodbank.pc_Aneg,\n        pc_Bpos: bloodbank.pc_Bpos,\n        pc_Bneg: bloodbank.pc_Bneg,\n        pc_ABpos: bloodbank.pc_ABpos,\n        pc_ABneg: bloodbank.pc_ABneg,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      })));\n      return list;\n    };\n\n    this.bloodreqList = () => {\n      const list = this.state.bloodreq.map(bloodreq => React.createElement(\"div\", {\n        className: \"col-sm\",\n        key: bloodreq._id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(Bloodreq, {\n        req_date: bloodreq.req_date,\n        req_time: bloodreq.req_time,\n        blood_type_name: bloodreq.blood_type_name,\n        units: bloodreq.units,\n        requester_name: bloodreq.requester_name,\n        req_status: bloodreq.req_status,\n        needUpdate: bloodreq.isUpdated,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      })));\n      return list;\n    };\n\n    this.state = {\n      bloodbank: [],\n      bloodreq: [],\n      details: []\n    }; //Bind Functions\n\n    this.loadBloodReqs = this.loadBloodReqs.bind(this);\n    this.loadBloodReqs();\n    this.loadBloodBank = this.loadBloodBank.bind(this);\n    this.loadBloodBank();\n\n    var _self = this;\n\n    setTimeout(function afterTwoSeconds() {\n      _self.bloodreqList = _self.bloodreqList.bind(_self);\n      _self.bloodbankList = _self.bloodbankList.bind(_self);\n      var myMessage = _self.state.bloodreq[_self.state.bloodreq.length - 1];\n      var jsonData = JSON.parse(myMessage);\n      var select = jsonData.isUpdated;\n      console.log(select); //console.log(self.state);\n      // console.log(self.state.bloodreq)\n    }, 1000);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"App-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: logo,\n      className: \"App-logo\",\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, \"National Blood Bank\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, \"STORAGE\"), this.bloodbankList(), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, \"FFP: Fresh Frozen Plasma PC: Platelet concentrate\"))), React.createElement(\"div\", {\n      className: \"App-main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(Details, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, this.bloodreqList(), this.updateHandler()))));\n  }\n  /*\n     render() {\n     return (\n       <div className=\"App-main\">\n         <div className = \"table\">\n         <table>\n           <thead>\n                     <tr>\n                         <td>Request Date</td>\n                         <td>Request Time</td>\n                         <td>Blood Type</td>\n                         <td>Unit(s)</td>\n                         <td>Requester Name</td>\n                         <td>Request Status</td>\n                     </tr>\n                 </thead> \n           </table>\n           <table>\n           {this.bloodreqList()}\n           </table>\n         </div>\n       </div>\n     );\n   }\n  */\n\n\n}\n/*function App() {\n\n  constructor(props){\n    super(props);\n    http.getBloodReqs();\n  }\n\n \n\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <h2>This is the National-BloodBank</h2>\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          //href=\"https://reactjs.org\"\n          href=\"https://www.google.com\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}*/\n\n\nexport default App;","map":{"version":3,"sources":["C:/Users/etvartavukvar/Desktop/Bitirme github/coagusearch-frontend/bloodbank-web/src/App/App.js"],"names":["React","Component","logo","HttpService","Bloodreq","Bloodbank","Details","Update","needUpdate","myMessage","self","state","bloodreq","length","jsonData","JSON","parse","select","isUpdated","console","log","i","counters","counter","counter_name","http","App","constructor","props","loadBloodReqs","getBloodReqs","then","bloodreqs","setState","err","loadBloodBank","getBloodBank","data","bloodbank","updateHandler","window","location","reload","bloodbankList","list","map","_id","ffp_0pos","ffp_0neg","ffp_Apos","ffp_Aneg","ffp_Bpos","ffp_Bneg","ffp_ABpos","ffp_ABneg","pc_0pos","pc_0neg","pc_Apos","pc_Aneg","pc_Bpos","pc_Bneg","pc_ABpos","pc_ABneg","bloodreqList","req_date","req_time","blood_type_name","units","requester_name","req_status","details","bind","setTimeout","afterTwoSeconds","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport logo from './logo.jpg';\nimport './App.css';\nimport HttpService from '../services/http-service';\nimport Bloodreq from '../bloodreq/bloodreq';\nimport Bloodbank from '../bloodbank/bloodbank';\nimport Details from '../details/details';\nimport Update from './update';\n\nvar needUpdate = false;\n\nvar myMessage = self.state.bloodreq[self.state.bloodreq.length - 1];\nvar jsonData = JSON.parse(myMessage);\nvar select = jsonData.isUpdated;\nconsole.log(select);\n\n\n\n\nvar jsonData = JSON.parse(myMessage);\nfor (var i = 0; i < jsonData.counters.length; i++) {\n  var counter = jsonData.counters[i];\n  console.log(counter.counter_name);\n}\n\nconst http = new HttpService();\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = { bloodbank: [], bloodreq: [], details: [] };\n\n\n\n    //Bind Functions\n    this.loadBloodReqs = this.loadBloodReqs.bind(this);\n    this.loadBloodReqs();\n\n    this.loadBloodBank = this.loadBloodBank.bind(this);\n    this.loadBloodBank();\n\n    var self = this;\n\n\n    setTimeout(function afterTwoSeconds() {\n      self.bloodreqList = self.bloodreqList.bind(self);\n      self.bloodbankList = self.bloodbankList.bind(self);\n      var myMessage = self.state.bloodreq[self.state.bloodreq.length - 1];\n      var jsonData = JSON.parse(myMessage);\n      var select = jsonData.isUpdated;\n      console.log(select);\n\n\n\n      //console.log(self.state);\n      // console.log(self.state.bloodreq)\n    }, 1000)\n\n\n  }\n\n\n\n\n\n\n  loadBloodReqs = () => {\n\n    var self = this;\n    http.getBloodReqs().then(bloodreqs => {\n      self.setState({ bloodreq: bloodreqs })\n    }, err => {\n\n    });\n    var length = self.state.bloodreq.length;\n    console.log(length);\n    needUpdate = self.state.bloodreq[length - 1];\n\n  }\n\n  loadBloodBank = () => {\n    var self = this;\n    http.getBloodBank().then(data => {\n      self.setState({ bloodbank: data })\n    }, err => {\n\n    });\n  }\n\n  updateHandler = () => {\n    //console.log(needUpdate);\n    if (needUpdate == true) {\n      window.location.reload();\n      needUpdate = false;\n    }\n\n\n  }\n\n  bloodbankList = () => {\n    const list = this.state.bloodbank.map((bloodbank) =>\n\n      <div className=\"col-sm\" key={bloodbank._id}>\n        <Bloodbank\n          ffp_0pos={bloodbank.ffp_0pos} ffp_0neg={bloodbank.ffp_0neg} ffp_Apos={bloodbank.ffp_Apos} ffp_Aneg={bloodbank.ffp_Aneg}\n          ffp_Bpos={bloodbank.ffp_Bpos} ffp_Bneg={bloodbank.ffp_Bneg} ffp_ABpos={bloodbank.ffp_ABpos} ffp_ABneg={bloodbank.ffp_ABneg}\n\n          pc_0pos={bloodbank.pc_0pos} pc_0neg={bloodbank.pc_0neg} pc_Apos={bloodbank.pc_Apos} pc_Aneg={bloodbank.pc_Aneg}\n          pc_Bpos={bloodbank.pc_Bpos} pc_Bneg={bloodbank.pc_Bneg} pc_ABpos={bloodbank.pc_ABpos} pc_ABneg={bloodbank.pc_ABneg}\n        />\n      </div>\n    );\n    return (list);\n  }\n\n\n  bloodreqList = () => {\n    const list = this.state.bloodreq.map((bloodreq) =>\n      <div className=\"col-sm\" key={bloodreq._id}>\n        <Bloodreq\n          req_date={bloodreq.req_date} req_time={bloodreq.req_time} blood_type_name={bloodreq.blood_type_name}\n          units={bloodreq.units} requester_name={bloodreq.requester_name} req_status={bloodreq.req_status}\n          needUpdate={bloodreq.isUpdated}\n        />\n      </div>\n    );\n    return (list);\n  }\n\n\n\n\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"\" />\n          <h2>National Blood Bank</h2>\n        </div>\n        <div>\n          <h1>STORAGE</h1>\n          {this.bloodbankList()}\n          <div>\n            <h2>FFP: Fresh Frozen Plasma PC: Platelet concentrate</h2>\n          </div>\n        </div>\n        <div className=\"App-main\">\n          <div className=\"table\">\n            <table>\n              <Details />\n            </table>\n            <div className=\"table\">\n              {this.bloodreqList()}\n              {this.updateHandler()}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n\n\n  /*\n \n   render() {\n     return (\n       <div className=\"App-main\">\n         <div className = \"table\">\n         <table>\n           <thead>\n                     <tr>\n                         <td>Request Date</td>\n                         <td>Request Time</td>\n                         <td>Blood Type</td>\n                         <td>Unit(s)</td>\n                         <td>Requester Name</td>\n                         <td>Request Status</td>\n                     </tr>\n                 </thead> \n           </table>\n           <table>\n           {this.bloodreqList()}\n           </table>\n         </div>\n       </div>\n     );\n   }\n */\n\n\n}\n\n\n\n\n\n/*function App() {\n\n  constructor(props){\n    super(props);\n    http.getBloodReqs();\n  }\n\n \n\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <h2>This is the National-BloodBank</h2>\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          //href=\"https://reactjs.org\"\n          href=\"https://www.google.com\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}*/\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}