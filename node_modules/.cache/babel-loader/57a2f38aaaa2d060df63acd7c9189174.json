{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\etvartavukvar\\\\Desktop\\\\AWS BLOODBANK\\\\bloodbank-web2\\\\bloodbank-web\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import\"whatwg-fetch\";var HttpService=function HttpService(){_classCallCheck(this,HttpService);this.getBloodReqs=function(){var promise=new Promise(function(resolve,reject){fetch(\"http://ec2-52-28-26-31.eu-central-1.compute.amazonaws.com:8080/blood/bloodreq\").then(function(response){resolve(response.json());});});return promise;};this.getBloodBank=function(){var promise=new Promise(function(resolve,reject){fetch(\"http://ec2-52-28-26-31.eu-central-1.compute.amazonaws.com:8080/blood/bloodbank\").then(function(response){resolve(response.json());});});return promise;};};export default HttpService;","map":{"version":3,"sources":["C:/Users/etvartavukvar/Desktop/AWS BLOODBANK/bloodbank-web2/bloodbank-web/src/services/http-service.js"],"names":["HttpService","getBloodReqs","promise","Promise","resolve","reject","fetch","then","response","json","getBloodBank"],"mappings":"uKAAA,MAAO,cAAP,C,GAEMA,CAAAA,W,+DACJC,Y,CAAe,UAAM,CACnB,GAAIC,CAAAA,OAAO,CAAG,GAAIC,CAAAA,OAAJ,CAAY,SAACC,OAAD,CAAUC,MAAV,CAAqB,CAC7CC,KAAK,CAAC,+EAAD,CAAL,CAAuFC,IAAvF,CAA4F,SAAAC,QAAQ,CAAI,CACtGJ,OAAO,CAACI,QAAQ,CAACC,IAAT,EAAD,CAAP,CACD,CAFD,EAGD,CAJa,CAAd,CAKA,MAAOP,CAAAA,OAAP,CACD,C,MAEDQ,Y,CAAe,UAAM,CACnB,GAAIR,CAAAA,OAAO,CAAG,GAAIC,CAAAA,OAAJ,CAAY,SAACC,OAAD,CAAUC,MAAV,CAAqB,CAC7CC,KAAK,CAAC,gFAAD,CAAL,CAAwFC,IAAxF,CAA6F,SAAAC,QAAQ,CAAI,CACvGJ,OAAO,CAACI,QAAQ,CAACC,IAAT,EAAD,CAAP,CACD,CAFD,EAGD,CAJa,CAAd,CAMA,MAAOP,CAAAA,OAAP,CACD,C,GAGH,cAAeF,CAAAA,WAAf","sourcesContent":["import \"whatwg-fetch\";\r\n\r\nclass HttpService {\r\n  getBloodReqs = () => {\r\n    var promise = new Promise((resolve, reject) => {\r\n      fetch(\"http://ec2-52-28-26-31.eu-central-1.compute.amazonaws.com:8080/blood/bloodreq\").then(response => {\r\n        resolve(response.json());\r\n      });\r\n    });\r\n    return promise;\r\n  };\r\n\r\n  getBloodBank = () => {\r\n    var promise = new Promise((resolve, reject) => {\r\n      fetch(\"http://ec2-52-28-26-31.eu-central-1.compute.amazonaws.com:8080/blood/bloodbank\").then(response => {\r\n        resolve(response.json());\r\n      });\r\n    });\r\n\r\n    return promise;\r\n  };\r\n}\r\n\r\nexport default HttpService;\r\n"]},"metadata":{},"sourceType":"module"}